<?xml version="1.0" encoding="UTF-8"?>
<persistence xmlns="http://java.sun.com/xml/ns/persistence" version="2.0">

    <persistence-unit name="songDB" transaction-type="RESOURCE_LOCAL">
        <provider>org.hibernate.jpa.HibernatePersistenceProvider</provider>
        
        <class>htwb.ai.SongsSonglistsService.model.User</class>
        <class>htwb.ai.SongsSonglistsService.model.Song</class>
        <class>htwb.ai.SongsSonglistsService.model.Songlist</class>
        <exclude-unlisted-classes>true</exclude-unlisted-classes>

        <properties>
            <property name="javax.persistence.jdbc.driver" 
                      value="com.mysql.jdbc.Driver"/>
            <property name="javax.persistence.jdbc.url" 
                      value="jdbc:mysql://bkdynbmvz80fhyg4xinz.cppwdtivsn16.eu-central-1.rds.amazonaws.com/bkdynbmvz80fhyg4xinz?useSSL=false"/>
            <property name="javax.persistence.jdbc.user" 
                      value="root"/>
            <property name="javax.persistence.jdbc.password" 
                      value="Pauloss2208"/>

            <!--Hibernate properties-->
            <property name="hibernate.show_sql" value="true"/>
            <property name="hibernate.format_sql" value="false"/>
            <property name="hibernate.dialect" value="org.hibernate.dialect.MySQLDialect"/>
            
            <!--Added by me-->
            <!--<property name="hibernate.enable_lazy_load_no_trans">true</property>-->
            
            <!-- The connection is released after each statement execution 
                 and reacquired prior to running the next statement. --> 
            <property name="hibernate.connection.release_mode" value="after_statement"></property>
            
            <!-- Connection pool properties -->
            <property name="hibernate.c3p0.min_size" value="1"/>
            <property name="hibernate.c3p0.max_size" value="20"/>
      
            <!-- in seconds:  When an idle connection is removed from the pool
                 Hibernate default: 0, never expire. -->
            <property name="hibernate.c3p0.timeout" value="300"/>
            
            <!--  Number of prepared statements that will be cached. 
                  Hibernate default: 0 , caching is disable. -->
            <property name="hibernate.c3p0.max_statements" value="50"/>
        </properties>
    </persistence-unit>
</persistence>